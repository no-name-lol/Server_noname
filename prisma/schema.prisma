generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model comments {
  commentId Int      @id @default(autoincrement())
  content   String   @db.VarChar(255)
  shortsId  Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  shorts    shorts   @relation(fields: [shortsId], references: [shortsId], map: "Comments_shortsId_fkey")
  users     users    @relation(fields: [userId], references: [userId], map: "Comments_userId_fkey")

  @@index([shortsId], map: "Comments_shortsId_fkey")
  @@index([userId], map: "Comments_userId_fkey")
}

model follow {
  followId     Int      @id @default(autoincrement())
  followUserId Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  userId       Int
  users        users    @relation(fields: [userId], references: [userId], map: "Follow_userId_fkey")

  @@index([userId], map: "Follow_userId_fkey")
}

model shorts {
  shortsId  Int        @id @default(autoincrement())
  title     String     @db.VarChar(255)
  videoUrl  String     @db.VarChar(255)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  userId    Int
  comments  comments[]
  users     users      @relation(fields: [userId], references: [userId], map: "Shorts_userId_fkey")

  @@index([userId], map: "Shorts_userId_fkey")
}

model users {
  userId    Int        @id @default(autoincrement())
  nickName  String?    @db.VarChar(255)
  password  String    @db.VarChar(255)
  email     String     @unique(map: "email") @db.VarChar(255)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  comments  comments[]
  follow    follow[]
  shorts    shorts[]
}
